# $Id: Dockerfile-galera-mysql8 398 2021-06-22 07:13:49Z bpahlawa $
# $Author: bpahlawa $
# Created: 26-APR-2021
# Modified by: bpahlawa
# $Date: 2021-06-22 15:13:49 +0800 (Tue, 22 Jun 2021) $
# $Revision: 398 $
#
# Run without Rebuild
# docker run -it --name mysql8 -p 3306:3306 -v /opt/mysql:/var/lib/mysql -v /opt/mysql/conf:/etc/mysql/mysql.conf.d galera-mysql8
#
# or
#
# Rebuild DBCONFIG and DATABASE
# docker run -it --name mysql8 -p 3306:3306 -v /opt/mysql:/var/lib/mysql -v /opt/mysql/conf:/etc/mysql.conf.d -e MYSQL_DBCONFIG_REBUILD=yes -e MYSQL_DATABASE_REBUILD=yes galera-mysql8
#
# docker run -it --name mysql8 --network host -v /opt/mysql:/var/lib/mysql -v /opt/mysql/conf:/etc/mysql.conf.d -e MYSQL_DBCONFIG_REBUILD=yes -e MYSQL_DATABASE_REBUILD=yes galera-mysql8
#
# for donor node (galera active):
# Rebuild DBCONFIG with HOST network
# docker run -it --name mysql8  --network host -v /opt/mysql:/var/lib/mysql -v /opt/mysql/conf:/etc/mysql.conf.d -e GALERA_CLUSTER_BOOTSTRAP=yes -e MYSQL_DBCONFIG_REBUILD=yes galera-mysql8
#
# Run without Rebuild with HOST network
# docker run -it --name mysql8  --network host -v /opt/mysql:/var/lib/mysql -v /opt/mysql/conf:/etc/mysql.conf.d galera-mysql8
#
# for joiner node:
# Rebuild DBCONFIG and DATABASE with HOST network
# docker run -it --name mysql8  --network host -v /opt/mysql:/var/lib/mysql -v /opt/mysql/conf:/etc/mysql/mysql.conf.d -e MYSQL_DBCONFIG_REBUILD=yes -e MYSQL_DATABASE_REBUILD=yes -e GALERA_CLUSTER_ADDRESS="gcomm://192.168.0.178" galera-mysql8
#
# Run without Rebuild DBCONFIG and DATABASE with HOST network
# docker run -it --name mysql8  --network host -v /opt/mysql:/var/lib/mysql -v /opt/mysql/conf:/etc/mysql/mysql.conf.d -e GALERA_CLUSTER_ADDRESS="gcomm://192.168.0.158" galera-mysql8
#
#
#
# add Entrypoint to Dockerfile
# echo -e "RUN echo \"$(cat gmysql8.env | base64 -w0)\" | base64 -d > /usr/local/bin/gmysql8.env\nRUN chmod ugo+x /usr/local/bin/gmysql8.env" >> Dockerfile-galera-mysql8
# echo -e "RUN echo \"$(cat entrypoint-gmysql8.sh | base64 -w0)\" | base64 -d > /usr/local/bin/entrypoint-gmysql8.sh\nRUN chmod ugo+x /usr/local/bin/entrypoint-gmysql8.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint-gmysql8.sh\"]" >> Dockerfile-galera-mysql8
#
# where:
# /opt/mysql (on Host)      is mapped to /var/lib/mysql (on Container)
# /opt/mysql/conf (on Host) is mapped to /etc/my.cnf.d (on Container)
# MYSQL_DBCONFIG_REBUILD=yes (re-create /etc/my.cnf.d/server.cnf
# MYSQL_DATABASE_REBUILD=yes (destroy and re-create database under directory /var/lib/mysql/data )
# --network host (it uses host network, NOTE: galera must use network host if it requires to have multimaster replication on a different node)
#
# NOTE: for all default environment variable please check galera.env file
#
# How to build this Dockerfile
# Run the following command where Dockerfile exists
#
# docker build --tag galera-mysql8 -f ./Dockerfile-galera-mysql8 /mnt

FROM debian:latest
MAINTAINER brpahlaw

WORKDIR /usr/local/bin
ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update
RUN apt-get -y upgrade
RUN apt-get -y install lsb-release gnupg wget software-properties-common
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv BC19DDBA
RUN echo "deb https://releases.galeracluster.com/galera-4/debian buster main" > /etc/apt/sources.list.d/galera.list
RUN echo "deb https://releases.galeracluster.com/mysql-wsrep-8.0.23-26.6/debian buster main" >> /etc/apt/sources.list.d/galera.list
RUN apt-get update
RUN apt-get -y install galera-4 galera-arbitrator-4 mysql-wsrep-8.0 busybox rsync ssh
RUN busybox --install
RUN rm -f /usr/bin/tar
RUN echo "IyEvYmluL2Jhc2gKIyAkSWQ6IGdhbGVyYS5lbnYgMzc4IDIwMjEtMDQtMjYgMDk6Mzc6NDJaIGJwYWhsYXdhICQKIyBDcmVhdGVkIDE5LUFQUi0yMDIxCiMgJEF1dGhvcjogYnBhaGxhd2EgJAojICREYXRlOiAyMDIxLTA0LTI2IDE3OjM3OjQyICswODAwIChNb24sIDI2IEFwciAyMDIxKSAkCiMgJFJldmlzaW9uOiAzNzggJAoKZXhwb3J0IE1ZU1FMX0RBVEFCQVNFX1JFQlVJTEQ9JHtNWVNRTF9EQVRBQkFTRV9SRUJVSUxEOi1ub30KZXhwb3J0IE1ZU1FMX0RCQ09ORklHX1JFQlVJTEQ9JHtNWVNRTF9EQkNPTkZJR19SRUJVSUxEOi1ub30KZXhwb3J0IEdBTEVSQV9DTFVTVEVSX05BTUU9JHtHQUxFUkFfQ0xVU1RFUl9OQU1FOi1teWNsdXN0ZXJ9CmV4cG9ydCBHQUxFUkFfQ0xVU1RFUl9CT09UU1RSQVA9JHtHQUxFUkFfQ0xVU1RFUl9CT09UU1RSQVA6LW5vfQpleHBvcnQgR0FMRVJBX0NMVVNURVJfQUREUkVTUz0ke0dBTEVSQV9DTFVTVEVSX0FERFJFU1M6LSJnY29tbTovLyJ9CmV4cG9ydCBHQUxFUkFfQ0xVU1RFUl9BQ1RJVkU9JHtHQUxFUkFfQ0xVU1RFUl9BQ1RJVkU6LSJ5ZXMifQpleHBvcnQgR0FMRVJBX0JPT1RTVFJBUF9ESVI9IiR7TVlTUUxfQkFTRV9ESVJ9Ly5ib290c3RyYXAiCmV4cG9ydCBHQUxFUkFfQk9PVFNUUkFQX0ZJTEU9IiR7R0FMRVJBX0JPT1RTVFJBUF9ESVJ9L2RvbmUiCmV4cG9ydCBVU0VfQ09OVEFJTkVSX0FERFJFU1M9JHtVU0VfQ09OVEFJTkVSX0FERFJFU1M6LXllc30KZXhwb3J0IEdBTEVSQV9ERUZBVUxUX05PREVOQU1FPSR7R0FMRVJBX0RFRkFVTFRfTk9ERU5BTUU6LSQoaG9zdG5hbWUgLXMpfQpleHBvcnQgR0FMRVJBX0RFRkFVTFRfQUREUkVTUz0ke0dBTEVSQV9ERUZBVUxUX0FERFJFU1M6LSQoaG9zdG5hbWUgLWkgfCBhd2sgJ3twcmludCAkMX0nKX0KZXhwb3J0IE1ZU1FMX1JPT1RfUEFTU1dPUkQ9JHtNWVNRTF9ST09UX1BBU1NXT1JEOi0iRzBka24wd3MifQpleHBvcnQgTVlTUUxfREFUQUJBU0VfTkFNRT0ke01ZU1FMX0RBVEFCQVNFX05BTUU6LW15ZGJ9CmV4cG9ydCBNWVNRTF9EQVRBQkFTRV9VU0VSPSR7TVlTUUxfREFUQUJBU0VfVVNFUjotYWRtaW59CmV4cG9ydCBNWVNRTF9EQVRBQkFTRV9VU0VSUEFTUz0ke01ZU1FMX0RBVEFCQVNFX1VTRVJQQVNTOi1wYXNzd29yZH0KZXhwb3J0IE1ZU1FMX1JFUExJQ0FUSU9OX1VTRVI9JHtNWVNRTF9SRVBMSUNBVElPTl9VU0VSOi1yZXBsdXNlcn0KZXhwb3J0IE1ZU1FMX1JFUExJQ0FUSU9OX1VTRVJQQVNTPSR7TVlTUUxfUkVQTElDQVRJT05fVVNFUlBBU1M6LXBhc3N3b3JkfQpleHBvcnQgTVlTUUxfQkFTRV9ESVI9JHtNWVNRTF9CQVNFX0RJUjotL3Zhci9saWIvbXlzcWx9CmV4cG9ydCBNWVNRTF9EQVRBQkFTRV9ESVI9JHtNWVNRTF9EQVRBQkFTRV9ESVI6LSR7TVlTUUxfQkFTRV9ESVJ9L2RhdGF9CmV4cG9ydCBNWVNRTF9ERUZBVUxUX1BPUlQ9JHtNWVNRTF9ERUZBVUxUX1BPUlQ6LTMzMDZ9CmV4cG9ydCBNWVNRTF9URU1QX0RJUj0ke01ZU1FMX1RFTVBfRElSOi0ke01ZU1FMX0JBU0VfRElSfS90bXB9CmV4cG9ydCBNWVNRTF9TT0NLRVRfRklMRT0ke01ZU1FMX1NPQ0tFVF9GSUxFOi0ke01ZU1FMX1RFTVBfRElSfS9teXNxbC5zb2NrfQpleHBvcnQgTVlTUUxfUElEX0ZJTEU9JHtNWVNRTF9QSURfRklMRTotJHtNWVNRTF9URU1QX0RJUn0vbXlzcWxkLnBpZH0KZXhwb3J0IE1ZU1FMX0JJTkRfQUREUkVTUz0ke01ZU1FMX0JJTkRfQUREUkVTUzotMC4wLjAuMH0KZXhwb3J0IE1ZU1FMX0xPR1NfRElSPSR7TVlTUUxfTE9HU19ESVI6LSR7TVlTUUxfQkFTRV9ESVJ9L2xvZ3N9CmV4cG9ydCBNWVNRTF9ERUZBVUxUX0NIQVJTRVQ9JHtNWVNRTF9ERUZBVUxUX0NIQVJTRVQ6LSJ1dGY4bWI0In0KZXhwb3J0IE1ZU1FMX0RFRkFVTFRfQ09MTEFURT0ke01ZU1FMX0RFRkFVTFRfQ09MTEFURTotInV0ZjhtYjRfZ2VuZXJhbF9jaSJ9CmV4cG9ydCBNWVNRTF9QTFVHSU5fRElSPSR7TVlTUUxfUExVR0lOX0RJUjotJHtNWVNRTF9CQVNFX0RJUn0vcGx1Z2lufQpleHBvcnQgTVlTUUxfQkFDS1VQX1VTRVI9JHtNWVNRTF9CQUNLVVBfVVNFUjotImJrcHVzZXIifQpleHBvcnQgTVlTUUxfQkFDS1VQX1VTRVJQQVNTPSR7TVlTUUxfQkFDS1VQX1VTRVJQQVNTOi0icGFzc3dvcmQifQpleHBvcnQgTVlTUUxfU1NUX01FVEhPRD0ke01ZU1FMX1NTVF9NRVRIT0Q6LSJyc3luYyJ9CmV4cG9ydCBNWVNRTF9BVVRIX1BMVUdJTj0ke01ZU1FMX0FVVEhfUExVR0lOOi0ibXlzcWxfbmF0aXZlX3Bhc3N3b3JkIn0K" | base64 -d > /usr/local/bin/gmysql8.env
RUN chmod ugo+x /usr/local/bin/gmysql8.env
RUN echo "" | base64 -d > /usr/local/bin/entrypoint-gmysql8.sh
RUN chmod ugo+x /usr/local/bin/entrypoint-gmysql8.sh
ENTRYPOINT ["/usr/local/bin/entrypoint-gmysql8.sh"]
